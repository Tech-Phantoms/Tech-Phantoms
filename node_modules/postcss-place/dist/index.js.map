{"version":3,"file":"index.js","sources":["../src/options.js","../src/onCSSDeclaration.js","../src/index.js"],"sourcesContent":["export default {\n\t/** Whether to preserve the original place value. */\n\tpreserve: true\n}\n","import { parse } from 'postcss-values-parser'\nimport options from './options'\n\nexport default (decl, { result }) => {\n\t// alignment\n\tconst alignment = decl.prop.match(placeMatch)[1]\n\n\t// value ast and child nodes\n\tlet value\n\n\ttry {\n\t\tvalue = parse(decl.value)\n\t} catch (error) {\n\t\tdecl.warn(\n\t\t\tresult,\n\t\t\t`Failed to parse value '${decl.value}'. Leaving the original value intact.`\n\t\t)\n\t}\n\n\tif (typeof value === 'undefined') {\n\t\treturn\n\t}\n\n\tlet alignmentValues = []\n\tvalue.walkWords(walk => {\n\t\talignmentValues.push(\n\t\t\twalk.parent.type === 'root' ? walk.toString() : walk.parent.toString()\n\t\t)\n\t})\n\n\tdecl.cloneBefore({\n\t\tprop: `align-${alignment}`,\n\t\tvalue: alignmentValues[0]\n\t})\n\n\tdecl.cloneBefore({\n\t\tprop: `justify-${alignment}`,\n\t\tvalue: alignmentValues[1] || alignmentValues[0]\n\t})\n\n\t// conditionally remove place-[alignment]\n\tif (!options.preserve) {\n\t\tdecl.remove()\n\t}\n}\n\nexport const placeMatch = /^place-(content|items|self)/\n","import options from './options'\nimport onCSSDeclaration, { placeMatch } from './onCSSDeclaration'\n\nconst creator = opts => {\n\t// prepare options\n\tif ('preserve' in Object(opts)) options.preserve = Boolean(opts.preserve)\n\n\treturn {\n\t\tpostcssPlugin: 'postcss-place',\n\t\tDeclaration: (decl, { result }) => {\n\t\t\tif (placeMatch.test(decl)) {\n\t\t\t\tonCSSDeclaration(decl, { result })\n\t\t\t}\n\t\t},\n\t}\n}\n\ncreator.postcss = true\n\nexport default creator\n"],"names":["preserve","decl","result","alignment","prop","match","placeMatch","value","parse","error","warn","alignmentValues","walkWords","walk","push","parent","type","toString","cloneBefore","options","remove","creator","opts","Object","Boolean","postcssPlugin","Declaration","test","onCSSDeclaration","postcss"],"mappings":";;;;AAAA,cAAe;AACd;AACAA,EAAAA,QAAQ,EAAE;AAFI,CAAf;;ACGA,wBAAe,CAACC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AACpC;AACA,QAAMC,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAUC,KAAV,CAAgBC,UAAhB,EAA4B,CAA5B,CAAlB,CAFoC;;AAKpC,MAAIC,KAAJ;;AAEA,MAAI;AACHA,IAAAA,KAAK,GAAGC,yBAAK,CAACP,IAAI,CAACM,KAAN,CAAb;AACA,GAFD,CAEE,OAAOE,KAAP,EAAc;AACfR,IAAAA,IAAI,CAACS,IAAL,CACCR,MADD,EAEE,0BAAyBD,IAAI,CAACM,KAAM,uCAFtC;AAIA;;AAED,MAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AACjC;AACA;;AAED,MAAII,eAAe,GAAG,EAAtB;AACAJ,EAAAA,KAAK,CAACK,SAAN,CAAgBC,IAAI,IAAI;AACvBF,IAAAA,eAAe,CAACG,IAAhB,CACCD,IAAI,CAACE,MAAL,CAAYC,IAAZ,KAAqB,MAArB,GAA8BH,IAAI,CAACI,QAAL,EAA9B,GAAgDJ,IAAI,CAACE,MAAL,CAAYE,QAAZ,EADjD;AAGA,GAJD;AAMAhB,EAAAA,IAAI,CAACiB,WAAL,CAAiB;AAChBd,IAAAA,IAAI,EAAG,SAAQD,SAAU,EADT;AAEhBI,IAAAA,KAAK,EAAEI,eAAe,CAAC,CAAD;AAFN,GAAjB;AAKAV,EAAAA,IAAI,CAACiB,WAAL,CAAiB;AAChBd,IAAAA,IAAI,EAAG,WAAUD,SAAU,EADX;AAEhBI,IAAAA,KAAK,EAAEI,eAAe,CAAC,CAAD,CAAf,IAAsBA,eAAe,CAAC,CAAD;AAF5B,GAAjB,EAhCoC;;AAsCpC,MAAI,CAACQ,OAAO,CAACnB,QAAb,EAAuB;AACtBC,IAAAA,IAAI,CAACmB,MAAL;AACA;AACD,CAzCD;AA2CO,MAAMd,UAAU,GAAG,6BAAnB;;MC3CDe,OAAO,GAAGC,IAAI,IAAI;AACvB;AACA,MAAI,cAAcC,MAAM,CAACD,IAAD,CAAxB,EAAgCH,OAAO,CAACnB,QAAR,GAAmBwB,OAAO,CAACF,IAAI,CAACtB,QAAN,CAA1B;AAEhC,SAAO;AACNyB,IAAAA,aAAa,EAAE,eADT;AAENC,IAAAA,WAAW,EAAE,CAACzB,IAAD,EAAO;AAAEC,MAAAA;AAAF,KAAP,KAAsB;AAClC,UAAII,UAAU,CAACqB,IAAX,CAAgB1B,IAAhB,CAAJ,EAA2B;AAC1B2B,QAAAA,gBAAgB,CAAC3B,IAAD,EAAO;AAAEC,UAAAA;AAAF,SAAP,CAAhB;AACA;AACD;AANK,GAAP;AAQA;;AAEDmB,OAAO,CAACQ,OAAR,GAAkB,IAAlB;;;;"}